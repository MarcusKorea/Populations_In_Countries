corr_matrix
}
c <- cor(easy_corr(norm_data,4))#,method = "spearman")
c <- cor(easy_corr(norm_data,4),method = "spearman")
c <- cor(easy_corr(data.frame(norm_data),4),method = "spearman")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
c
c <- cor(easy_corr(data.frame(norm_data),4),method = "pearson")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "white", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "grey", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "dark grey", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "yellow", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "green", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "dark green", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "dark yellow", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "dark orange", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdBu"), number.cex = 0.5,addCoef.col = "pink", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdYlBu"), number.cex = 0.5,addCoef.col = "", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="YlRdBu"), number.cex = 0.5,addCoef.col = "", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="YlRdBu"), number.cex = 0.5,addCoef.col = "", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="YlRdBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdYlBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
melted_movies <- melt(norm_data)
ggplot(melted_movies, aes(value))+geom_histogram()+facet_wrap(~ variable,scales = "free")
melted_movies
melted_movies <- melt(norm_data)
ggplot(melted_movies, aes(value))+geom_histogram()+facet_wrap(~ L1,scales = "free")
# melt the data
melted_movies <- melt(numeric_movies)
ggplot(melted_movies, aes(value))+geom_histogram()+facet_wrap(~ variable,scales = "free")
library(arules)
library(arules)
titanic <- read.csv("Dataset-20211002/Titanic.csv")
head(titanic)
summary(titanic)
head(titanic)
titanic <- titanic[,-1]
titanic
head(titanic)
titanic_t <- as(titanic,"transactions")
titanic_t
class(titanic_t)
summary(titanic_t)
sum(is.na(titanic))
summary(titanic)
titanic[titannic == ""]
titanic[titanic == ""]
titanic[titanic == "",]
library(arules)
titanic <- read.csv("Dataset-20211002/Titanic.csv")
head(titanic)
titanic <- titanic[,-1]
head(titanic)
titanic[titanic == "",]
titanic[titanic == "",] <- NA
is.na(titanic)
sum(is.na(titanic))
unique(titanic)
unique(titanic$Class)
unique(titanic$Sex)
unique(titanic$Age)
unique(titanic$Survived)
summary(titanic$Survived)
unique(titanic$Survived)
itemFrequencyPlot(titanic_t)
titanic_t <- as(titanic,"transactions")
titanic$Class <- as.factor(titanic$Class)
titanic$Sex<- as.factor(titanic$Sex)
titanic$Age<- as.factor(titanic$Age)
titanic$Survived<- as.factor(titanic$Survived)
titanic_t <- as(titanic,"transactions")
class(titanic_t)
summary(titanic_t)
itemFrequencyPlot(titanic_t)
rules1 <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8))
rules1 <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(lhs= "Survived = Yes"))
rules1 <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(lhs= "Survived = yes"))
rules1 <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(default = lhs,rhs = "Survived = yes"))
rules1 <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(default = "lhs", rhs="Survived=Yes"))
inspect((rules1))
library(arulesViz)
library(grid)
rules <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(default = "lhs", rhs="Survived=Yes"))
inspect((rules))
plot(rules)
plot(rules, method ="graph")
sort(rule, by = "lift")
sort(rules, by = "lift")
sorted_rules <- sort(rules, by = "lift")
plot(sorted_rules, method ="graph")
sorted_rules <- sort(rules, by = "lift", decreasing =  TRUE)
plot(sorted_rules, method ="graph")
plot(sorted_rules)
plot(sorted_rules, method ="graph")
inspect(sorted_rules)
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules[1:3], method ="paracoord")
graph
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules[1:3], method ="grouped")
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules, method ="graph")
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules[1:3])
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules[1:3])
rules <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(default = "rhs", lhs="Survived=Yes"))
## Inspect the rules
inspect((rules))
sorted_rules <- sort(rules, by = "lift", decreasing =  TRUE)
plot(sorted_rules[1:3], method ="graph")
plot(sorted_rules, method ="graph")
rules <- apriori(titanic_t,parameter = list(minlen = 2, sup =0.005,conf = 0.8),appearance = list(default = "lhs", rhs="Survived=Yes"))
## Inspect the rules
inspect((rules))
sorted_rules <- sort(rules, by = "lift", decreasing =  TRUE)
inspect(sorted_rules)
plot(sorted_rules[1:3], method ="graph")
strong <- filter(values,Corr_Value > 0.7, Corr_Value <1)
# filter for only the upper diagonal
o_c_df[upper.tri(o_c_df, diag=TRUE)] <- NA
corrplot(c,method =  "color",type = "upper",col = brewer.pal(n = 10, name ="RdYlBu"))
corrplot(c,method =  "color",type = "upper",col = brewer.pal(n = 10, name ="RdYlBu"))
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
library(dplyr)
library(tidyverse)
library(ggplot2)
# for the missing values graph
library(naniar)
# Import reshape package, for melt
library(reshape2)
library(corrplot)
library(ggpubr)
# to change column names easily
library(data.table)
# for colours
library(RColorBrewer)
movies <- read.csv("Dataset-20211002/Movie.csv")
head(movies)
movies[movies == ""] <- NA
summary(movies)
gg_miss_var(movies) + labs(title = "Missing Value Counts Per Variable", y = "Counts", x = "Variables")
nrow(movies)
missing_val <- movies[,c("Aspect_ratio","Content_rating","Plot_keywords","Actor_3_name","Actor_3_facebook_likes","Facenumber_in_poster","Actor_2_name","Actor_2_facebook_likes","Actor_1_name","Actor_1_facebook_likes","Reviews","Duration","Color")]
head(missing_val)
movies[which(is.na(movies$Color)),]$Year
movies$Color[which(is.na(movies$Color))] <- 'Color'
any(is.na(movies$Color))
movies[which(is.na(movies$Aspect_ratio)),]$Year
table(movies$Aspect_ratio)
movies$Aspect_ratio[which(is.na(movies$Aspect_ratio))] <- 2.35
table(movies$Content_rating)
movies$Content_rating[which(movies$Content_rating == "GP")] <- "PG"
movies$Content_rating[which(movies$Content_rating == "X")] <- "NC-17"
movies$Content_rating[which(movies$Content_rating == "Not Rated")] <- "Unrated"
movies$Content_rating[which(movies$Content_rating == "Passed")] <- "Approved"
movies <- movies[which(!is.na(movies$Content_rating)),]
movies <- movies[which(!is.na(movies$Actor_1_name)),]
movies <- movies[which(!is.na(movies$Actor_2_name)),]
movies <- movies[which(!is.na(movies$Actor_3_name)),]
movies <- movies[which(!is.na(movies$Plot_keywords)),]
hist(movies$Facenumber_in_poster)
movies$Facenumber_in_poster[which(is.na(movies$Facenumber_in_poster))] <- median(movies$Facenumber_in_poster, na.rm = TRUE)
gg_miss_var(movies) + labs(title = "Missing Value Counts Per Variable", y = "Counts", x = "Variables")
unique(movies$Aspect_ratio)
summary(movies)
movies$Title <- substr(movies$Title,1,nchar(movies$Title)-1)
movies$Profit <- movies$Gross - movies$Budget
movies_clean <- distinct(movies)
numeric_variables <- c("Reviews","Duration","Director_facebook_likes","Actor_3_facebook_likes","Actor_1_facebook_likes","Gross","Votes","Cast_total_facebook_likes","Facenumber_in_poster","Budget","Year","Actor_2_facebook_likes","Imdb_score","Movie_facebook_likes","Profit")
# Use only numeric values
numeric_movies <- movies_clean[,numeric_variables]
# Split data into 4 data frames with 3 variables each to make graph easier to read
movies1 <- cbind(numeric_movies[,1:4],numeric_movies[,"Profit"])
names(movies1)[ncol(movies1)] <- "Profit"
movies2 <- cbind(numeric_movies[,5:8],numeric_movies[,"Profit"])
names(movies2)[ncol(movies2)] <- "Profit"
movies3 <- cbind(numeric_movies[,9:12],numeric_movies[,"Profit"])
names(movies3)[ncol(movies3)] <- "Profit"
movies4 <- cbind(numeric_movies[,13:15])
names(movies3)[ncol(movies4)] <- "Profit"
# melt each data frame(does the same as gather but you can leave a variable as a column)
easy_movies1 <- melt(movies1,"Profit")
easy_movies2 <- melt(movies2,"Profit")
easy_movies3 <- melt(movies3,"Profit")
easy_movies4 <- melt(movies4,"Profit")
# Graph each dataframe
ggplot(data = easy_movies1, aes(value,Profit)) + geom_point() + geom_smooth(method = 'lm') +facet_wrap(~variable, scale = "free") + guides(x = guide_axis(angle =45))
ggplot(data = easy_movies2, aes(value,Profit)) + geom_point() + geom_smooth(method = 'lm') +facet_wrap(~variable, scale = "free") + guides(x = guide_axis(angle =45))
ggplot(data = easy_movies3, aes(value,Profit)) + geom_point() + geom_smooth(method = 'lm') +facet_wrap(~variable, scale = "free") + guides(x = guide_axis(angle =45))
ggplot(data = easy_movies4, aes(value,Profit)) + geom_point() + geom_smooth(method = 'lm') +facet_wrap(~variable, scale = "free") + guides(x = guide_axis(angle =45))
q1 <- quantile(movies$Profit,0.25)
q3 <- quantile(movies$Profit,0.975)
iqr <- q3-q1
movies_clean <- movies[which(!(movies$Profit < q1 | movies$Profit > q3)),]
# melt the data
melted_movies <- melt(numeric_movies)
ggplot(melted_movies, aes(value))+geom_histogram()+facet_wrap(~ variable,scales = "free")
shapiro.test(numeric_movies$Imdb_score)
zscore <- function(df_column){
return (df_column - mean(df_column))/sd(df_column)
}
norm_data[] <- lapply(numeric_movies,zscore)
corrplot(c,method =  "color",type = "upper",col = brewer.pal(n = 10, name ="RdYlBu"))
corrplot(c,method =  "color",type = "upper",col = brewer.pal(n = 10, name ="RdYlBu"))
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdYlBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
norm_data[] <- lapply(numeric_movies,zscore)
norm_data[] <- lapply(numeric_movies,zscore)
norm_data[] <- lapply(numeric_movies,zscore)
norm_data <- lapply(numeric_movies,zscore)
c<- cor(data.frame(norm_data), method = "pearson")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdYlBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
easy_corr <- function(corr_matrix, length){
names(corr_matrix) <- abbreviate(names(corr_matrix), minlength = length)
corr_matrix
}
c <- cor(easy_corr(data.frame(norm_data),4),method = "pearson")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdYlBu"), number.cex = 0.5,addCoef.col = "black", type = "upper")
corrplot(c,method =  "color",col = brewer.pal(n = 10, name ="RdYlBu"), number.cex = 0.5,addCoef.col = "black")
knitr::opts_chunk$set(echo = TRUE)
ggplot(iris, aes(Sepal.Length,Speal.Width))
ggplot(iris, aes(Sepal.Length,Speal.Width))+geom_point()
librarY(ggplot2)
library(ggplot2)
library(ggplot2)
ggplot(iris, aes(Sepal.Length,Speal.Width))+geom_point()
iris
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point()
ggplot(iris, aes(Sepal.Length,Sepal.Width, color = "blue"))+geom_point()
ggplot(iris, aes(Sepal.Length,Sepal.Width, color = "red"))+geom_point()
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "red")
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue")
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue",alpha =0.5)
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue",alpha =0.5,szie =5)
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue",alpha =0.5,size =5)
```{r}
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue",alpha =0.5,size =5)+labs(xlab("X"))
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue",alpha =0.5,size =5)+labs(x = "X")
ggplot(iris, aes(Sepal.Length,Sepal.Width))+geom_point(color = "blue",alpha =0.5,size =5)+labs(x = "X")+ theme_minimal()
length(2:7)
median(iris$Sepal.Length,na.rm=T)
x+y
x <- c(3,7,NA,4,"X")
y <- c(5,NA,1,2,2,)
x <- c(3,7,NA,4,"X")
y <- c(5,NA,1,2,2)
x+y
iris[2:5,]
d <- c(TRUE,TRUE,1)
type(d)
astype(d)
typeof(d)
iris.isna().sum()
isna(iris).sum()
isna(iris)
is.na(iris)
sum(is.na(iris))
which(is.na(iris))
which(is.na(iris))
x <- c("a","b")
as.logical(x)
as.logical(TRUE)
as.logical(0)
as.logical("A")
is.factor()
is.factor(iris$Species)
select_if(iris,is.factor(iris$Species))
library(dplyr)
select_if(iris,is.factor(iris$Species))
select_if(iris,is.factor())
select_if(iris,is.factor
select_if(iris,is.factor)
select_if(iris,is.factor())
select_if(iris,numeric())
select_if(numeric())
select_if(is.factor)
iris%>%select_if(is.factor)
iris%>%is.na()
is.na(iris)
select_if(is.factor(iris))
select_if(is.factor(iris))
select_if(iris,is.factor)
ggplot(iris,aes(x = Species))+geom_boxplot()
boxplot(iris$Species)
1-(3/5)^2-(1/5)^2
1-(5/10)^2-(5/10)^2
c1 <- 1-(3/5)^2-(2/5)^2
c2 <- 1_(1/5)^2-(4/5)^2
(5/10)*c1+(5/10)*c2
c1 <- 1-(3/5)^2-(2/5)^2
c2 <- 1_(1/5)^2-(4/5)^2
(5/10)*c1+(5/10)*c2
c1 <- 1-(3/5)^2-(2/5)^2
c2 <- 1-(1/5)^2-(4/5)^2
(5/10)*c1+(5/10)*c2
c1 <- -(2/5)*log(2/5)
c2 <- (3/5)*log(3/5)
c2 <- -(3/5)*log(3/5)
c1+c2
c1 <- -(2/5)*log(2/5,base = 10)
c2 <- -(3/5)*log(3/5,base = 10)
c1+c2
c1 <- -(2/5)*log(2/5,base = 10)-(3/5)*log(3/5,base = 10)
c1
c1 <- -(2/5)*log(2/5,base = 10)-(3/5)*log(3/5)
c1
c1 <- -(2/5)*log(2/5,base = 2)-(3/5)*log(3/5,base = 2)
c1
c1
c1 <- -(3/9)*log(3/9,base = 2)-(6/9)*log(6/9,base = 2)
c1
c1 <- -(1/9)*log(1/9,base = 2)-(8/9)*log(8/9,base = 2)
c1
c1 <- -(3/4)*log(3/4,base = 2)-(1/4)*log(1/4,base = 2)
c1
c1 <- -(1/5)*log(1/5,base = 2)-(4/5)*log(4/5,base = 2)
c1
4/9*0.811 +5/9*0.72
1-(4/10)^2-(6/10)^2
1-(3/4)^2-(1/4)^2
1-(5/6)^2-(1/6)^2
-(5/6)*log(5/6,base = 2)-(1/6)*log(1/6,base=2)
-(3/4)*log(3/4,base = 2)-(1/4)*log(1/4,base=2)
(6/10)*a +(4/10)*b
a <- -(5/6)*log(5/6,base = 2)-(1/6)*log(1/6,base=2)
b <- -(3/4)*log(3/4,base = 2)-(1/4)*log(1/4,base=2)
(6/10)*a +(4/10)*b
a <- -(5/6)*log(5/6,base = 2)-(1/6)*log(1/6,base=2)
b <- -(3/4)*log(3/4,base = 2)-(1/4)*log(1/4,base=2)
c <- -(4/10)*log(4/10,base = 2)-(6/10)*log(6/10,base=2)
(6/10)*a +(4/10)*b
c-((6/10)*a +(4/10)*b)
d <- -(0/3)*log(0/3,base = 2)-(3/3)*log(3/3,base=2)
d
4*4*4*2
3/4 * 1/4 * 3/4 * 1/2
9/128
9*3*3*3
2/9 * 1/3 * 1/3*  1/3
2/9 * 1/3 * 1/3*  1/3
2/243
9/128*4/13
(2/243)*(9/13)
(9/128)*(4/13)
(9/128)*(4/13)>(2/243)*(9/13)
(9/128)*(4/13)
(2/243)*(9/13)
(1/10)+0.5*(4/10)
20905.98- 18200
(20905.98- 18200)*0.19
(total_earnt - minimum_threshold)*0.19
total_earnt <- 20905.98
minimum_threshold <- 18200
total_earnt <- 39598.98
minimum_threshold <- 18200
(total_earnt - minimum_threshold)*0.19
total_earnt - minimum_threshold)
total_earnt - minimum_threshold
(total_earnt - minimum_threshold)*0.19
total_txed <- 7171
total_txed - ((total_earnt - minimum_threshold)*0.19)
setwd("~/")
setwd("~/Downloads/archive (4)")
knitr::opts_chunk$set(echo = TRUE)
d1 <- read_csv("PopulationByAgeSex.csv")
d1 <- read_csv("PopulationByAgeSex.csv")
d1 <- read.csv("PopulationByAgeSex.csv")
names(d1)
unique(d1$Location)
names(d1)
names(d1)
filter(d1,PopMale)
names(d1)
filter(d1,Location = China)
filter(d1,Location = "China")
unique(d1$Location)
unique(d1$Year)
names(d1)
unqie(d1$Time)
unique(d1$Time)
filter(d1,Location = "China")
library(tidyverse)
filter(d1,Location = "China")
library(dplyr)
filter(d1,Location = "China")
filter(d1,Location == "China")
select(filter(d1,Location == "China"),c(PopMale,PopFemale))
select(filter(d1,Location == "China"),c(Location,Year,PopMale,PopFemale))
select(filter(d1,Location == "China"),c(Location,Time,PopMale,PopFemale))
#look for China and get year and pop of male and female
select(filter(d1,Location == "China"),c(Location,Time,PopMale,PopFemale,PopTotal))
#look for China and get year and pop of male and female
china <- select(filter(d1,Location == "China"),c(Location,Time,PopMale,PopFemale,PopTotal))
mutate(china, maleProp =PopMale/PopTotal, femaleProp = PopFemale/PopTotal )
mutate(china, maleProp =(PopMale/PopTotal)*100, femaleProp = (PopFemale/PopTotal )*100)
print(china2)
# calculate proportion of males and females
china2 <- mutate(china, maleProp =(PopMale/PopTotal)*100, femaleProp = (PopFemale/PopTotal )*100)
print(china2)
knitr::opts_chunk$set(echo = TRUE)
#read file
d1 <- read.csv("PopulationByAgeSex.csv")
library(ggplot2)
ggplot(china2)
ggplot(china2)+geom_line(malePop)
ggplot(china2)+geom_line(maleProp)
ggplot(china2)+geom_histogram(maleProp)
ggplot(china2)+geom_histogram(aes(maleProp))
ggplot(china2)+geom_histogram(aes(maleProp),colours(maleProp))
ggplot(china2)+geom_histogram(aes(maleProp,color = "blue"))+
ggplot(china2)+geom_histogram(aes(maleProp,color = "blue"))
library(ggplot2)
ggplot(china2)+geom_histogram(aes(maleProp,color = "blue"))
ggplot(china2)+geom_histogram(aes(maleProp),color="blue")
ggplot(china2)+geom_histogram(aes(maleProp),fill="blue")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")
ggplot(china2,aes(x=maleProp,y=femaleProp))+geom_histogram(color = "black",fill="blue")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")+geom_histogram(aes(femaleProp),color = "black",fill="blue")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")+geom_histogram(aes(femaleProp),color = "black",fill="pink")
ggplot(china2)+geom_histogram(aes(femaleProp),color = "black",fill="pink")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")+geom_histogram(aes(femaleProp),color = "black",fill="pink")+labs(title = "Male vs Female Prop")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")+geom_histogram(aes(femaleProp),color = "black",fill="pink")+labs(title = "Male vs Female Prop", x="Proportion of Population")
ggplot(china2)+geom_histogram(aes(femaleProp),color = "black",fill="pink")+labs(title = "Female Prop", x="Proportion of Population")
ggplot(china2)+geom_histogram(aes(maleProp),color = "black",fill="blue")+labs(title = "Male Prop", x="Proportion of Population")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "black",fill="pink")+labs(title = "Female Prop", x="Proportion of Population")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+labs(title = "Female Prop", x="Proportion of Population")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+labs(title = "Female Prop", x="Time")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+labs(title = "Female Prop", x="Year")
ggplot(china2)+geom_line(aes(maleProp),color = "black")+labs(title = "Male Prop", x="Year")
ggplot(china2)+geom_line(aes(maleProp),color = "black")+labs(title = "Male Prop", x="Year")
ggplot(china2)+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male Prop", x="Year")
ggplot(china2)+geom_histogram(aes(Time,maleProp),color = "black")+geom_line(aes(Time,femaleProp),color = "pink")+labs(title = "Male vs Female Prop", x="Year")
ggplot(china2)+geom_histogram(aes(Time,maleProp),color = "black")
ggplot(china2)+geom_histogram(aes(Time,maleProp),color = "black")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(2015,linetype="dotted")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_dark()
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+x_scale_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male Prop", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
knitr::opts_chunk$set(echo = TRUE)
#read file
d1 <- read.csv("PopulationByAgeSex.csv")
library(dplyr)
#look for China and get year and pop of male and female
china <- select(filter(d1,Location == "China"),c(Location,Time,PopMale,PopFemale,PopTotal))
# calculate proportion of males and females
china2 <- mutate(china, maleProp =(PopMale/PopTotal)*100, femaleProp = (PopFemale/PopTotal )*100)
print(china2)
library(ggplot2)
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+labs(title = "Female Prop", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,maleProp),color = "black")+labs(title = "Male Prop", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp),color = "male")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp,color = "black"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp,color = "male"),color ="black")+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "pink"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(xintercept = 2015,linetype="dotted",aes(color = "blue"))+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015),linetype="dotted")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =15)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =20)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =5)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =11)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =12)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+guides(shape = guide_legend(override.aes = size = 0.5))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+guides(shape = guide_legend(override.aes = size = 0.5))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+guides(shape = guide_legend(override.aes = list(size = 0.5)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+guides(shape = guide_legend(override.aes = list(size = 0.5)))+guides(color = guide_legend(override.aes = list(size = 0.5)))+ theme(legend.title = element_text(size = 3),
legend.text = element_text(size = 3))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+guides(shape = guide_legend(override.aes = list(size = 0.5)))+guides(color = guide_legend(override.aes = list(size = 0.5)))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.title = element_text(size = 3),legend.text = element_text(size = 3))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.title = element_text(size = 3),legend.text = element_text(size = 5))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.title = element_text(size = 3),legend.text = element_text(size = 5))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 5))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 10))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 8))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp),color = "pink")+labs(title = "Female Prop", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "Female"))+labs(title = "Female Prop", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "female"))+geom_line(aes(Time,maleProp,color = "male"))+labs(title = "Male vs Female Prop Vs Year", x="Year",y ="Proportion (%)")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))scale_color_manual(values=c("#CC6666", "#9999CC"))
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values=c("#CC6666", "#9999CC"))
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values=c("#0000FF", "#9999CC"))
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values=c("#0000FF"))
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "Female"))+labs(title = "Female Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())+scale_color_manual(values=c"#FFC0CB")
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "Female"))+labs(title = "Female Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())+scale_color_manual(values="#FFC0CB")
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")
ggplot(china2)+geom_line(aes(Time,femaleProp,color = "Female"))+labs(title = "Female Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+ theme(legend.text = element_text(size = 7))+theme(legend.title=element_blank())+scale_color_manual(values="#FFC0CB")+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"), linetype="dotted")+geom_vline(aes(xintercept = 2021, color ="No restrictions on children"),linetype="dotted")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(aes(xintercept = 2015, color = "Two child Policy"),linetype="dotted"),linetype="dotted")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")
+theme(legend.title=element_blank())
ggplot(china2)+geom_line(aes(Time,maleProp,color = "Male"))+labs(title = "Male Prop Vs Year", x="Year")+geom_vline(xintercept = 2015,linetype="dotted",color = "blue")+geom_vline(xintercept = 2021,linetype="dotted",color = "green")+theme_classic()+scale_x_continuous(breaks = c(seq(from = 1950, to= 2100, by =10)))+scale_color_manual(values="#0000FF")+theme(legend.title=element_blank())
